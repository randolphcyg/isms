// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: isms/v1/developer.proto

package v1

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 创建开发商的请求参数
type CreateDeveloperReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NameZh        string                 `protobuf:"bytes,1,opt,name=name_zh,json=nameZh,proto3" json:"name_zh,omitempty"`           // 中文名称（必填）
	NameEn        string                 `protobuf:"bytes,2,opt,name=name_en,json=nameEn,proto3" json:"name_en,omitempty"`           // 英文名称（必填）
	CountryId     uint32                 `protobuf:"varint,3,opt,name=country_id,json=countryId,proto3" json:"country_id,omitempty"` // 国家ID（必填）
	Website       string                 `protobuf:"bytes,4,opt,name=website,proto3" json:"website,omitempty"`                       // 官网（可选）
	Description   string                 `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`               // 简介（可选）
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateDeveloperReq) Reset() {
	*x = CreateDeveloperReq{}
	mi := &file_isms_v1_developer_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateDeveloperReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDeveloperReq) ProtoMessage() {}

func (x *CreateDeveloperReq) ProtoReflect() protoreflect.Message {
	mi := &file_isms_v1_developer_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDeveloperReq.ProtoReflect.Descriptor instead.
func (*CreateDeveloperReq) Descriptor() ([]byte, []int) {
	return file_isms_v1_developer_proto_rawDescGZIP(), []int{0}
}

func (x *CreateDeveloperReq) GetNameZh() string {
	if x != nil {
		return x.NameZh
	}
	return ""
}

func (x *CreateDeveloperReq) GetNameEn() string {
	if x != nil {
		return x.NameEn
	}
	return ""
}

func (x *CreateDeveloperReq) GetCountryId() uint32 {
	if x != nil {
		return x.CountryId
	}
	return 0
}

func (x *CreateDeveloperReq) GetWebsite() string {
	if x != nil {
		return x.Website
	}
	return ""
}

func (x *CreateDeveloperReq) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

// 更新开发商的请求参数
type UpdateDeveloperReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            uint32                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                // 开发商ID（必填）
	NameZh        string                 `protobuf:"bytes,2,opt,name=name_zh,json=nameZh,proto3" json:"name_zh,omitempty"`           // 中文名称（可选，有值则更新）
	NameEn        string                 `protobuf:"bytes,3,opt,name=name_en,json=nameEn,proto3" json:"name_en,omitempty"`           // 英文名称（可选，有值则更新）
	CountryId     uint32                 `protobuf:"varint,4,opt,name=country_id,json=countryId,proto3" json:"country_id,omitempty"` // 国家ID（可选，有值则更新）
	Website       string                 `protobuf:"bytes,5,opt,name=website,proto3" json:"website,omitempty"`                       // 官网（可选，有值则更新）
	Description   string                 `protobuf:"bytes,6,opt,name=description,proto3" json:"description,omitempty"`               // 简介（可选，有值则更新）
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateDeveloperReq) Reset() {
	*x = UpdateDeveloperReq{}
	mi := &file_isms_v1_developer_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateDeveloperReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDeveloperReq) ProtoMessage() {}

func (x *UpdateDeveloperReq) ProtoReflect() protoreflect.Message {
	mi := &file_isms_v1_developer_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDeveloperReq.ProtoReflect.Descriptor instead.
func (*UpdateDeveloperReq) Descriptor() ([]byte, []int) {
	return file_isms_v1_developer_proto_rawDescGZIP(), []int{1}
}

func (x *UpdateDeveloperReq) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateDeveloperReq) GetNameZh() string {
	if x != nil {
		return x.NameZh
	}
	return ""
}

func (x *UpdateDeveloperReq) GetNameEn() string {
	if x != nil {
		return x.NameEn
	}
	return ""
}

func (x *UpdateDeveloperReq) GetCountryId() uint32 {
	if x != nil {
		return x.CountryId
	}
	return 0
}

func (x *UpdateDeveloperReq) GetWebsite() string {
	if x != nil {
		return x.Website
	}
	return ""
}

func (x *UpdateDeveloperReq) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

// 查询单个开发商的请求
type GetDeveloperReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            uint32                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` // 开发商ID（必填）
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDeveloperReq) Reset() {
	*x = GetDeveloperReq{}
	mi := &file_isms_v1_developer_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDeveloperReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDeveloperReq) ProtoMessage() {}

func (x *GetDeveloperReq) ProtoReflect() protoreflect.Message {
	mi := &file_isms_v1_developer_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDeveloperReq.ProtoReflect.Descriptor instead.
func (*GetDeveloperReq) Descriptor() ([]byte, []int) {
	return file_isms_v1_developer_proto_rawDescGZIP(), []int{2}
}

func (x *GetDeveloperReq) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

// 分页查询开发商的请求
type ListDevelopersReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Page          uint32                 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`                            // 页码（必须>0，业务逻辑中默认1）
	PageSize      uint32                 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`    // 每页条数（必须>0且≤100，业务逻辑中默认20）
	CountryId     uint32                 `protobuf:"varint,3,opt,name=country_id,json=countryId,proto3" json:"country_id,omitempty"` // 按国家筛选（可选）
	Keyword       string                 `protobuf:"bytes,4,opt,name=keyword,proto3" json:"keyword,omitempty"`                       // 按名称搜索（可选，匹配中文或英文名称）
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListDevelopersReq) Reset() {
	*x = ListDevelopersReq{}
	mi := &file_isms_v1_developer_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListDevelopersReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDevelopersReq) ProtoMessage() {}

func (x *ListDevelopersReq) ProtoReflect() protoreflect.Message {
	mi := &file_isms_v1_developer_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDevelopersReq.ProtoReflect.Descriptor instead.
func (*ListDevelopersReq) Descriptor() ([]byte, []int) {
	return file_isms_v1_developer_proto_rawDescGZIP(), []int{3}
}

func (x *ListDevelopersReq) GetPage() uint32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListDevelopersReq) GetPageSize() uint32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListDevelopersReq) GetCountryId() uint32 {
	if x != nil {
		return x.CountryId
	}
	return 0
}

func (x *ListDevelopersReq) GetKeyword() string {
	if x != nil {
		return x.Keyword
	}
	return ""
}

// 单个开发商的响应
type DeveloperResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            uint32                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                     // 自增ID
	NameZh        string                 `protobuf:"bytes,2,opt,name=name_zh,json=nameZh,proto3" json:"name_zh,omitempty"`                // 中文名称
	NameEn        string                 `protobuf:"bytes,3,opt,name=name_en,json=nameEn,proto3" json:"name_en,omitempty"`                // 英文名称
	CountryId     uint32                 `protobuf:"varint,4,opt,name=country_id,json=countryId,proto3" json:"country_id,omitempty"`      // 国家ID
	CountryName   string                 `protobuf:"bytes,5,opt,name=country_name,json=countryName,proto3" json:"country_name,omitempty"` // 国家名称（冗余字段）
	Website       string                 `protobuf:"bytes,6,opt,name=website,proto3" json:"website,omitempty"`                            // 官网
	Description   string                 `protobuf:"bytes,7,opt,name=description,proto3" json:"description,omitempty"`                    // 简介
	CreatedAt     string                 `protobuf:"bytes,8,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`       // 创建时间（RFC3339格式）
	UpdatedAt     string                 `protobuf:"bytes,9,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`       // 更新时间（RFC3339格式）
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeveloperResp) Reset() {
	*x = DeveloperResp{}
	mi := &file_isms_v1_developer_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeveloperResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeveloperResp) ProtoMessage() {}

func (x *DeveloperResp) ProtoReflect() protoreflect.Message {
	mi := &file_isms_v1_developer_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeveloperResp.ProtoReflect.Descriptor instead.
func (*DeveloperResp) Descriptor() ([]byte, []int) {
	return file_isms_v1_developer_proto_rawDescGZIP(), []int{4}
}

func (x *DeveloperResp) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DeveloperResp) GetNameZh() string {
	if x != nil {
		return x.NameZh
	}
	return ""
}

func (x *DeveloperResp) GetNameEn() string {
	if x != nil {
		return x.NameEn
	}
	return ""
}

func (x *DeveloperResp) GetCountryId() uint32 {
	if x != nil {
		return x.CountryId
	}
	return 0
}

func (x *DeveloperResp) GetCountryName() string {
	if x != nil {
		return x.CountryName
	}
	return ""
}

func (x *DeveloperResp) GetWebsite() string {
	if x != nil {
		return x.Website
	}
	return ""
}

func (x *DeveloperResp) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *DeveloperResp) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *DeveloperResp) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

// 分页查询开发商的响应
type ListDevelopersResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Items         []*DeveloperResp       `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`                        // 开发商列表
	Total         uint32                 `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`                       // 总条数
	Page          uint32                 `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`                         // 当前页码（实际使用的页码）
	PageSize      uint32                 `protobuf:"varint,4,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"` // 实际使用的每页条数
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListDevelopersResp) Reset() {
	*x = ListDevelopersResp{}
	mi := &file_isms_v1_developer_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListDevelopersResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDevelopersResp) ProtoMessage() {}

func (x *ListDevelopersResp) ProtoReflect() protoreflect.Message {
	mi := &file_isms_v1_developer_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDevelopersResp.ProtoReflect.Descriptor instead.
func (*ListDevelopersResp) Descriptor() ([]byte, []int) {
	return file_isms_v1_developer_proto_rawDescGZIP(), []int{5}
}

func (x *ListDevelopersResp) GetItems() []*DeveloperResp {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *ListDevelopersResp) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListDevelopersResp) GetPage() uint32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListDevelopersResp) GetPageSize() uint32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

var File_isms_v1_developer_proto protoreflect.FileDescriptor

const file_isms_v1_developer_proto_rawDesc = "" +
	"\n" +
	"\x17isms/v1/developer.proto\x12\aisms.v1\x1a\x1cgoogle/api/annotations.proto\x1a\x17validate/validate.proto\"\xcc\x01\n" +
	"\x12CreateDeveloperReq\x12#\n" +
	"\aname_zh\x18\x01 \x01(\tB\n" +
	"\xfaB\ar\x05\x10\x01\x18\xc8\x01R\x06nameZh\x12#\n" +
	"\aname_en\x18\x02 \x01(\tB\n" +
	"\xfaB\ar\x05\x10\x01\x18\xc8\x01R\x06nameEn\x12&\n" +
	"\n" +
	"country_id\x18\x03 \x01(\rB\a\xfaB\x04*\x02 \x00R\tcountryId\x12\"\n" +
	"\awebsite\x18\x04 \x01(\tB\b\xfaB\x05r\x03\x18\xf4\x03R\awebsite\x12 \n" +
	"\vdescription\x18\x05 \x01(\tR\vdescription\"\xe5\x01\n" +
	"\x12UpdateDeveloperReq\x12\x17\n" +
	"\x02id\x18\x01 \x01(\rB\a\xfaB\x04*\x02 \x00R\x02id\x12#\n" +
	"\aname_zh\x18\x02 \x01(\tB\n" +
	"\xfaB\ar\x05\x10\x01\x18\xc8\x01R\x06nameZh\x12#\n" +
	"\aname_en\x18\x03 \x01(\tB\n" +
	"\xfaB\ar\x05\x10\x01\x18\xc8\x01R\x06nameEn\x12&\n" +
	"\n" +
	"country_id\x18\x04 \x01(\rB\a\xfaB\x04*\x02 \x00R\tcountryId\x12\"\n" +
	"\awebsite\x18\x05 \x01(\tB\b\xfaB\x05r\x03\x18\xf4\x03R\awebsite\x12 \n" +
	"\vdescription\x18\x06 \x01(\tR\vdescription\"*\n" +
	"\x0fGetDeveloperReq\x12\x17\n" +
	"\x02id\x18\x01 \x01(\rB\a\xfaB\x04*\x02 \x00R\x02id\"\x91\x01\n" +
	"\x11ListDevelopersReq\x12\x1b\n" +
	"\x04page\x18\x01 \x01(\rB\a\xfaB\x04*\x02 \x00R\x04page\x12&\n" +
	"\tpage_size\x18\x02 \x01(\rB\t\xfaB\x06*\x04\x18d \x00R\bpageSize\x12\x1d\n" +
	"\n" +
	"country_id\x18\x03 \x01(\rR\tcountryId\x12\x18\n" +
	"\akeyword\x18\x04 \x01(\tR\akeyword\"\x8d\x02\n" +
	"\rDeveloperResp\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\rR\x02id\x12\x17\n" +
	"\aname_zh\x18\x02 \x01(\tR\x06nameZh\x12\x17\n" +
	"\aname_en\x18\x03 \x01(\tR\x06nameEn\x12\x1d\n" +
	"\n" +
	"country_id\x18\x04 \x01(\rR\tcountryId\x12!\n" +
	"\fcountry_name\x18\x05 \x01(\tR\vcountryName\x12\x18\n" +
	"\awebsite\x18\x06 \x01(\tR\awebsite\x12 \n" +
	"\vdescription\x18\a \x01(\tR\vdescription\x12\x1d\n" +
	"\n" +
	"created_at\x18\b \x01(\tR\tcreatedAt\x12\x1d\n" +
	"\n" +
	"updated_at\x18\t \x01(\tR\tupdatedAt\"\x89\x01\n" +
	"\x12ListDevelopersResp\x12,\n" +
	"\x05items\x18\x01 \x03(\v2\x16.isms.v1.DeveloperRespR\x05items\x12\x14\n" +
	"\x05total\x18\x02 \x01(\rR\x05total\x12\x12\n" +
	"\x04page\x18\x03 \x01(\rR\x04page\x12\x1b\n" +
	"\tpage_size\x18\x04 \x01(\rR\bpageSize2\x98\x03\n" +
	"\tDeveloper\x12a\n" +
	"\x0fCreateDeveloper\x12\x1b.isms.v1.CreateDeveloperReq\x1a\x16.isms.v1.DeveloperResp\"\x19\x82\xd3\xe4\x93\x02\x13:\x01*\"\x0e/v1/developers\x12f\n" +
	"\x0fUpdateDeveloper\x12\x1b.isms.v1.UpdateDeveloperReq\x1a\x16.isms.v1.DeveloperResp\"\x1e\x82\xd3\xe4\x93\x02\x18:\x01*\x1a\x13/v1/developers/{id}\x12]\n" +
	"\fGetDeveloper\x12\x18.isms.v1.GetDeveloperReq\x1a\x16.isms.v1.DeveloperResp\"\x1b\x82\xd3\xe4\x93\x02\x15\x12\x13/v1/developers/{id}\x12a\n" +
	"\x0eListDevelopers\x12\x1a.isms.v1.ListDevelopersReq\x1a\x1b.isms.v1.ListDevelopersResp\"\x16\x82\xd3\xe4\x93\x02\x10\x12\x0e/v1/developersB\x15Z\x13isms/api/isms/v1;v1b\x06proto3"

var (
	file_isms_v1_developer_proto_rawDescOnce sync.Once
	file_isms_v1_developer_proto_rawDescData []byte
)

func file_isms_v1_developer_proto_rawDescGZIP() []byte {
	file_isms_v1_developer_proto_rawDescOnce.Do(func() {
		file_isms_v1_developer_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_isms_v1_developer_proto_rawDesc), len(file_isms_v1_developer_proto_rawDesc)))
	})
	return file_isms_v1_developer_proto_rawDescData
}

var file_isms_v1_developer_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_isms_v1_developer_proto_goTypes = []any{
	(*CreateDeveloperReq)(nil), // 0: isms.v1.CreateDeveloperReq
	(*UpdateDeveloperReq)(nil), // 1: isms.v1.UpdateDeveloperReq
	(*GetDeveloperReq)(nil),    // 2: isms.v1.GetDeveloperReq
	(*ListDevelopersReq)(nil),  // 3: isms.v1.ListDevelopersReq
	(*DeveloperResp)(nil),      // 4: isms.v1.DeveloperResp
	(*ListDevelopersResp)(nil), // 5: isms.v1.ListDevelopersResp
}
var file_isms_v1_developer_proto_depIdxs = []int32{
	4, // 0: isms.v1.ListDevelopersResp.items:type_name -> isms.v1.DeveloperResp
	0, // 1: isms.v1.Developer.CreateDeveloper:input_type -> isms.v1.CreateDeveloperReq
	1, // 2: isms.v1.Developer.UpdateDeveloper:input_type -> isms.v1.UpdateDeveloperReq
	2, // 3: isms.v1.Developer.GetDeveloper:input_type -> isms.v1.GetDeveloperReq
	3, // 4: isms.v1.Developer.ListDevelopers:input_type -> isms.v1.ListDevelopersReq
	4, // 5: isms.v1.Developer.CreateDeveloper:output_type -> isms.v1.DeveloperResp
	4, // 6: isms.v1.Developer.UpdateDeveloper:output_type -> isms.v1.DeveloperResp
	4, // 7: isms.v1.Developer.GetDeveloper:output_type -> isms.v1.DeveloperResp
	5, // 8: isms.v1.Developer.ListDevelopers:output_type -> isms.v1.ListDevelopersResp
	5, // [5:9] is the sub-list for method output_type
	1, // [1:5] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_isms_v1_developer_proto_init() }
func file_isms_v1_developer_proto_init() {
	if File_isms_v1_developer_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_isms_v1_developer_proto_rawDesc), len(file_isms_v1_developer_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_isms_v1_developer_proto_goTypes,
		DependencyIndexes: file_isms_v1_developer_proto_depIdxs,
		MessageInfos:      file_isms_v1_developer_proto_msgTypes,
	}.Build()
	File_isms_v1_developer_proto = out.File
	file_isms_v1_developer_proto_goTypes = nil
	file_isms_v1_developer_proto_depIdxs = nil
}
